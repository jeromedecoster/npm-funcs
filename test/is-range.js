const fn = require('../is-range')
const test = require('tape')

test('is-range', function (t) {

  // special case...
  // should be true, according to `require('semver').validRange()`
  // but I prefer to be more strict here
  t.deepEqual(fn(''),       false)
  t.deepEqual(fn('  '),     false)
  t.deepEqual(fn('1.0 ||'), false)
  t.deepEqual(fn('|| 1.0'), false)
  t.deepEqual(fn('~*'),     false, '~*')
  t.deepEqual(fn(' ~ * '),  false, ' ~ * ')
  t.deepEqual(fn('^*'),     false, '^*')
  t.deepEqual(fn(' ^ * '),  false, ' ^ * ')
  t.deepEqual(fn('<*'),     false, '<*')
  t.deepEqual(fn(' < * '),  false, ' < * ')
  t.deepEqual(fn('>*'),     false, '>*')
  t.deepEqual(fn(' > * '),  false, ' > * ')
  t.deepEqual(fn('~x'),     false, '~x')
  t.deepEqual(fn(' ~ x '),  false, ' ~ x ')
  t.deepEqual(fn('^x'),     false, '^x')
  t.deepEqual(fn(' ^ x '),  false, ' ^ x ')
  t.deepEqual(fn('<x'),     false, '<x')
  t.deepEqual(fn(' < x '),  false, ' < x ')
  t.deepEqual(fn('>x'),     false, '>x')
  t.deepEqual(fn(' > x '),  false, ' > x ')
  t.deepEqual(fn('*.*'),    false, '*.*')
  t.deepEqual(fn(' *.* '),  false, ' *.* ')
  t.deepEqual(fn('x.x'),    false, 'x.x')
  t.deepEqual(fn(' x.x '),  false, ' x.x ')
  t.deepEqual(fn('*.x'),    false, '*.x')
  t.deepEqual(fn(' *.x '),  false, ' *.x ')
  t.deepEqual(fn('x.*'),    false, 'x.*')
  t.deepEqual(fn(' x.* '),  false, ' x.* ')
  t.deepEqual(fn('*.X'),    false, '*.X')
  t.deepEqual(fn(' *.X '),  false, ' *.X ')
  t.deepEqual(fn('*.1'),    false, '*.1')
  t.deepEqual(fn(' *.1 '),  false, ' *.1 ')
  t.deepEqual(fn('1.x < * > *'), false)
  // ...end of special case

  t.deepEqual(fn(),                    false)
  t.deepEqual(fn(),                    false)
  t.deepEqual(fn(1),                   false)
  t.deepEqual(fn(/./),                 false)
  t.deepEqual(fn('a'),                 false)
  t.deepEqual(fn('1 || a'),            false)
  t.deepEqual(fn('1 << 2'),            false)
  t.deepEqual(fn('1 < 2 <'),           false)
  t.deepEqual(fn('>4<=5.0.0'),         false)
  t.deepEqual(fn('1.0.0+build-abc.'),  false)
  t.deepEqual(fn('^^1.0.0+build-abc'), false)
  t.deepEqual(fn('1.0.0.0'),           false)
  t.deepEqual(fn('a.b.c'),             false)
  t.deepEqual(fn('1.0.0b'),            false)
  t.deepEqual(fn('1.n'),               false)
  t.deepEqual(fn('1.?'),               false)
  t.deepEqual(fn('*.'),                false)
  t.deepEqual(fn('~^*'),               false)

  t.deepEqual(fn('*'),                     true)
  t.deepEqual(fn('1'),                     true)
  t.deepEqual(fn('1.0'),                   true)
  t.deepEqual(fn('>1.0'),                  true)
  t.deepEqual(fn('<1.0'),                  true)
  t.deepEqual(fn('1.0.0'),                 true)
  t.deepEqual(fn('1.0.0-alpha1'),          true)
  t.deepEqual(fn('1.0.0+build-123'),       true)
  t.deepEqual(fn('1 < 2'),                 true)
  t.deepEqual(fn('>4 <=5.0.0'),            true)
  t.deepEqual(fn('>0.2.3 >0.2.4 <=0.2.5'), true)
  t.deepEqual(fn('1.0.0+build-abc'),       true)
  t.deepEqual(fn('^1.0.0+build-abc'),      true)
  t.deepEqual(fn('v1.0.0'),                true)
  t.deepEqual(fn('< v2.0.0'),              true)
  t.deepEqual(fn('  <    v2.0.0'),         true)
  t.deepEqual(fn('~1.0.0'),                true)
  t.deepEqual(fn('~v1.0.0'),               true)
  t.deepEqual(fn('~1.0.0 || ~2.0.0'),      true)
  t.deepEqual(fn('~1.0.0 || *'),           true)
  t.deepEqual(fn('^0.2 || >0.1'),          true)
  t.deepEqual(fn('2.0.0+build.1848'),      true)
  t.deepEqual(fn('1.0.0-rc1'),             true)
  t.deepEqual(fn('1.0.0-rc-2'),            true)
  t.deepEqual(fn('1.0.0 - 1.0.x'),         true)
  t.deepEqual(fn('1.*'),                   true)
  t.deepEqual(fn('1.*.*'),                 true)
  t.deepEqual(fn('1.*.x'),                 true)
  t.deepEqual(fn('1.x'),                   true)
  t.deepEqual(fn('1.x.x'),                 true)
  t.deepEqual(fn('1.x.*'),                 true)
  t.end()
})
